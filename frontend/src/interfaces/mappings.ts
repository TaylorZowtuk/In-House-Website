import { ParticipantDTO } from "../../../backend/src/types/ParticipantDTO";
import { PlayerStatDTO } from "../../../backend/src/types/PlayerStatDTO";

export function tierMappings(tier: string): string {
  const pathToEmblems: string = "/assets/ranked_emblems/";
  const pathToProvisional: string = "/assets/base-icons/provisional.png";
  const mappings: { [key: string]: string } = {
    unranked: pathToProvisional,
    iron: pathToEmblems + "Emblem_Iron.png",
    bronze: pathToEmblems + "Emblem_Bronze.png",
    silver: pathToEmblems + "Emblem_Silver.png",
    gold: pathToEmblems + "Emblem_Gold.png",
    platinum: pathToEmblems + "Emblem_Platinum.png",
    diamond: pathToEmblems + "Emblem_Diamond.png",
    master: pathToEmblems + "Emblem_Master.png",
    grandmaster: pathToEmblems + "Emblem_Grandmaster.png",
    challenger: pathToEmblems + "Emblem_Challenger.png",
  };
  return mappings[tier.toLowerCase()];
}

export function participantToPlayer(
  participant: ParticipantDTO
): PlayerStatDTO {
  return {
    assists: participant.ASSISTS,
    baronKills: participant.BARON_KILLS,
    barracksKilled: participant.BARRACKS_KILLED,
    bountyLevel: participant.BOUNTY_LEVEL,
    championMissionStat0: participant.CHAMPION_MISSION_STAT_0,
    championMissionStat1: participant.CHAMPION_MISSION_STAT_1,
    championMissionStat2: participant.CHAMPION_MISSION_STAT_2,
    championMissionStat3: participant.CHAMPION_MISSION_STAT_3,
    championTransform: participant.CHAMPION_TRANSFORM,
    championsKilled: participant.CHAMPIONS_KILLED,
    combatPlayerScore: participant.COMBAT_PLAYER_SCORE,
    consumablesPurchased: participant.CONSUMABLES_PURCHASED,
    doubleKills: participant.DOUBLE_KILLS,
    dragonKills: participant.DRAGON_KILLS,
    exp: participant.EXP,
    friendlyDampenLost: participant.FRIENDLY_DAMPEN_LOST,
    friendlyHqLost: participant.FRIENDLY_HQ_LOST,
    friendlyTurretLost: participant.FRIENDLY_TURRET_LOST,
    gameEndedInEarlySurrender: participant.GAME_ENDED_IN_EARLY_SURRENDER,
    gameEndedInSurrender: participant.GAME_ENDED_IN_SURRENDER,
    goldEarned: participant.GOLD_EARNED,
    goldSpent: participant.GOLD_SPENT,
    hqKilled: participant.HQ_KILLED,
    individualPosition: participant.INDIVIDUAL_POSITION,
    item0: participant.ITEM0,
    item1: participant.ITEM1,
    item2: participant.ITEM2,
    item3: participant.ITEM3,
    item4: participant.ITEM4,
    item5: participant.ITEM5,
    item6: participant.ITEM6,
    itemsPurchased: participant.ITEMS_PURCHASED,
    keystoneId: participant.KEYSTONE_ID,
    killingSprees: participant.KILLING_SPREES,
    largestCriticalStrike: participant.LARGEST_CRITICAL_STRIKE,
    largestKillingSpree: participant.LARGEST_KILLING_SPREE,
    largestMultiKill: participant.LARGEST_MULTI_KILL,
    level: participant.LEVEL,
    longestTimeSpentLiving: participant.LONGEST_TIME_SPENT_LIVING,
    magicDamageDealtPlayer: participant.MAGIC_DAMAGE_DEALT_PLAYER,
    magicDamageDealtToChampions: participant.MAGIC_DAMAGE_DEALT_TO_CHAMPIONS,
    magicDamageTaken: participant.MAGIC_DAMAGE_TAKEN,
    minionsKilled: participant.MINIONS_KILLED,
    mutedAll: participant.MUTED_ALL,
    name: participant.NAME,
    neutralMinionsKilled: participant.NEUTRAL_MINIONS_KILLED,
    neutralMinionsKilledEnemyJungle:
      participant.NEUTRAL_MINIONS_KILLED_ENEMY_JUNGLE,
    neutralMinionsKilledYourJungle:
      participant.NEUTRAL_MINIONS_KILLED_YOUR_JUNGLE,
    nodeCapture: participant.NODE_CAPTURE,
    nodeCaptureAssist: participant.NODE_CAPTURE_ASSIST,
    nodeNeutralize: participant.NODE_NEUTRALIZE,
    nodeNeutralizeAssist: participant.NODE_NEUTRALIZE_ASSIST,
    numDeaths: participant.NUM_DEATHS,
    objectivePlayerScore: participant.OBJECTIVE_PLAYER_SCORE,
    objectivesStolen: participant.OBJECTIVES_STOLEN,
    objectivesStolenAssists: participant.OBJECTIVES_STOLEN_ASSISTS,
    pentaKills: participant.PENTA_KILLS,
    perkPrimaryStyle: participant.PERK_PRIMARY_STYLE,
    perkSubStyle: participant.PERK_SUB_STYLE,
    perk0: participant.PERK0,
    perk0Var1: participant.PERK0_VAR1,
    perk0Var2: participant.PERK0_VAR2,
    perk0Var3: participant.PERK0_VAR3,
    perk1: participant.PERK1,
    perk1Var1: participant.PERK1_VAR1,
    perk1Var2: participant.PERK1_VAR2,
    perk1Var3: participant.PERK1_VAR3,
    perk2: participant.PERK2,
    perk2Var1: participant.PERK2_VAR1,
    perk2Var2: participant.PERK2_VAR2,
    perk2Var3: participant.PERK2_VAR3,
    perk3: participant.PERK3,
    perk3Var1: participant.PERK3_VAR1,
    perk3Var2: participant.PERK3_VAR2,
    perk3Var3: participant.PERK3_VAR3,
    perk4: participant.PERK4,
    perk4Var1: participant.PERK4_VAR1,
    perk4Var2: participant.PERK4_VAR2,
    perk4Var3: participant.PERK4_VAR3,
    perk5: participant.PERK5,
    perk5Var1: participant.PERK5_VAR1,
    perk5Var2: participant.PERK5_VAR2,
    perk5Var3: participant.PERK5_VAR3,
    physicalDamageDealtPlayer: participant.PHYSICAL_DAMAGE_DEALT_PLAYER,
    physicalDamageDealtToChampions:
      participant.PHYSICAL_DAMAGE_DEALT_TO_CHAMPIONS,
    physicalDamageTaken: participant.PHYSICAL_DAMAGE_TAKEN,
    ping: participant.PING,
    playerPosition: participant.PLAYER_POSITION,
    playerRole: participant.PLAYER_ROLE,
    playerScore0: participant.PLAYER_SCORE_0,
    playerScore1: participant.PLAYER_SCORE_1,
    playerScore10: participant.PLAYER_SCORE_10,
    playerScore11: participant.PLAYER_SCORE_11,
    playerScore2: participant.PLAYER_SCORE_2,
    playerScore3: participant.PLAYER_SCORE_3,
    playerScore4: participant.PLAYER_SCORE_4,
    playerScore5: participant.PLAYER_SCORE_5,
    playerScore6: participant.PLAYER_SCORE_6,
    playerScore7: participant.PLAYER_SCORE_7,
    playerScore8: participant.PLAYER_SCORE_8,
    playerScore9: participant.PLAYER_SCORE_9,
    playersIMuted: participant.PLAYERS_I_MUTED,
    playersThatMutedMe: participant.PLAYERS_THAT_MUTED_ME,
    quadraKills: participant.QUADRA_KILLS,
    sightWardsBoughtInGame: participant.SIGHT_WARDS_BOUGHT_IN_GAME,
    skin: participant.SKIN,
    spell1Cast: participant.SPELL1_CAST,
    spell2Cast: participant.SPELL2_CAST,
    spell3Cast: participant.SPELL3_CAST,
    spell4Cast: participant.SPELL4_CAST,
    statPerk0: participant.STAT_PERK_0,
    statPerk1: participant.STAT_PERK_1,
    statPerk2: participant.STAT_PERK_2,
    summonSpell1Cast: participant.SUMMON_SPELL1_CAST,
    summonSpell2Cast: participant.SUMMON_SPELL2_CAST,
    team: participant.TEAM,
    teamEarlySurrendered: participant.TEAM_EARLY_SURRENDERED,
    teamObjective: participant.TEAM_OBJECTIVE,
    teamPosition: participant.TEAM_POSITION,
    timeCcingOthers: participant.TIME_CCING_OTHERS,
    timeOfFromLastDisconnect: participant.TIME_OF_FROM_LAST_DISCONNECT,
    timePlayed: participant.TIME_PLAYED,
    timeSpentDisconnected: participant.TIME_SPENT_DISCONNECTED,
    totalDamageDealt: participant.TOTAL_DAMAGE_DEALT,
    totalDamageDealtToBuildings: participant.TOTAL_DAMAGE_DEALT_TO_BUILDINGS,
    totalDamageDealtToChampions: participant.TOTAL_DAMAGE_DEALT_TO_CHAMPIONS,
    totalDamageDealtToObjectives: participant.TOTAL_DAMAGE_DEALT_TO_OBJECTIVES,
    totalDamageDealtToTurrets: participant.TOTAL_DAMAGE_DEALT_TO_TURRETS,
    totalDamageSelfMitigated: participant.TOTAL_DAMAGE_SELF_MITIGATED,
    totalDamageShieldedOnTeammates:
      participant.TOTAL_DAMAGE_SHIELDED_ON_TEAMMATES,
    totalDamageTaken: participant.TOTAL_DAMAGE_TAKEN,
    totalHeal: participant.TOTAL_HEAL,
    totalHealOnTeammates: participant.TOTAL_HEAL_ON_TEAMMATES,
    totalPlayerScore: participant.TOTAL_PLAYER_SCORE,
    totalScoreRank: participant.TOTAL_SCORE_RANK,
    totalTimeCrowdControlDealt: participant.TOTAL_TIME_CROWD_CONTROL_DEALT,
    totalTimeSpentDead: participant.TOTAL_TIME_SPENT_DEAD,
    totalUnitsHealed: participant.TOTAL_UNITS_HEALED,
    tripleKills: participant.TRIPLE_KILLS,
    trueDamageDealtPlayer: participant.TRUE_DAMAGE_DEALT_PLAYER,
    trueDamageDealtToChampions: participant.TRUE_DAMAGE_DEALT_TO_CHAMPIONS,
    trueDamageTaken: participant.TRUE_DAMAGE_TAKEN,
    turretsKilled: participant.TURRETS_KILLED,
    unrealKills: participant.UNREAL_KILLS,
    victoryPointTotal: participant.VICTORY_POINT_TOTAL,
    visionScore: participant.VISION_SCORE,
    visionWardsBoughtInGame: participant.VISION_WARDS_BOUGHT_IN_GAME,
    wardKilled: participant.WARD_KILLED,
    wardPlaced: participant.WARD_PLACED,
    wardPlacedDetector: participant.WARD_PLACED_DETECTOR,
    wasAfk: participant.WAS_AFK,
    wasAfkAfterFailedSurrender: participant.WAS_AFK_AFTER_FAILED_SURRENDER,
    wasEarlySurrenderAccomplice: participant.WAS_EARLY_SURRENDER_ACCOMPLICE,
    win: participant.WIN,
  };
}
